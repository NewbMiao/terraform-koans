apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tfc-agent
  namespace: {{ .Values.namespace }}
  labels:
    app: tfc-agent
spec:
  serviceName: "tfc-agent"
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: tfc-agent
  template:
    metadata:
      labels:
        app: tfc-agent
      annotations:
        scriptConfigHash: {{ .Values.scriptConfigHash }}
        policyConfigHash: {{ .Values.policyConfigHash }}
    spec:
      terminationGracePeriodSeconds: 900
      securityContext:
        fsGroup: {{ .Values.deployment.fsGroup }}
        runAsUser: {{ .Values.deployment.fsUser }}
      containers:
        - name: agent-scripts
          image: alpine:3.18
          command: ["/bin/sh", "-c"]
          args:
            - /bin/sh /scripts/init.sh && /bin/sh /scripts/cleanup.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: policies
              mountPath: /policies
            - name: agent-storage
              mountPath: /cache
        - name: tfc-agent
          image: "{{ .Values.agent.image }}:{{ .Values.agent.tag }}"
          volumeMounts:
            - name: agent-storage
              mountPath: /cache
            - name: policies
              mountPath: /policies
          env:
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/local/bin:/cache/bin
            - name: TFC_AGENT_HOOK_TIMEOUT
              value: "60"
            - name: TFC_AGENT_CACHE_DIR
              value: /cache
            - name: TFC_AGENT_DATA_DIR
              value: /cache/data
            - name: TF_PLUGIN_CACHE_DIR
              value: /cache/plugin-cache
            - name: TFC_AGENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: tfc-agent-secret
                  key: token
            - name: TFC_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: TFC_ADDRESS
              value: {{ .Values.agent.tfcAddress | quote }}
            - name: TFC_AGENT_LOG_LEVEL
              value: {{ .Values.agent.logLevel | quote }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      volumes:
        - name: scripts
          configMap:
            name: agent-scripts
        - name: policies
          configMap:
            name: agent-policies
        {{- if not .Values.deployment.usePV }}
        - name: agent-storage
          emptyDir: {}
        {{- end }}
  {{- if .Values.deployment.usePV }}
  volumeClaimTemplates:
  - metadata:
      name: agent-storage
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: {{ .Values.deployment.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.deployment.storageSize }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: tfc-agent
  namespace: {{ .Values.namespace }}
spec:
  clusterIP: None
  selector:
    app: tfc-agent
