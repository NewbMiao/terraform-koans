apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-scripts
  namespace: {{ .Values.namespace }}
data:
  # VCS-Driven not support .terraformignore to ignore files, so we need to clean up some folders via pre-plan hook.
  pre-plan.sh: |
    #!/bin/sh
    set -e
    echo "===agent pre plan hook==="
    echo "Workspace: "${TFC_WORKSPACE_NAME:-}
    echo "RunID: "${TFC_RUN_ID:-}
    # monnorepo cleanup unrelaeted folders except infrastructure
    TARGET_RUN_DIR=/cache/data/component/terraform/runs/"$TFC_RUN_ID"
    CONDITION_DIR=$(find $TARGET_RUN_DIR -type d -path "*/config/infrastructure/dev" 2>/dev/null | head -n 1)
    if [ -n "$CONDITION_DIR" ] && [ -d "$CONDITION_DIR" ]; then
        TARGET_CONFIG_DIR="$TARGET_RUN_DIR/config"
        echo "Locate monorepo, will clean up other folders except infrastructure."
        cd "$TARGET_CONFIG_DIR"
        echo "Config Size before clean up:"
        du -sh .
        find . -mindepth 1 -maxdepth 1 ! -name "infrastructure" -exec rm -rf {} +
        echo "Config Size after clean up:"
        du -sh .
    else
        echo "Not found monnorepo, skipping cleanup."
    fi
  # post-plan hook to check config size, which will be used as pack-filesystem to persist the config to the TFE server.
  post-plan.sh: |
    #!/bin/sh
    echo "===agent post plan hook==="
    TARGET_RUN_DIR=/cache/data/component/terraform/runs/"$TFC_RUN_ID"
    if [ -d "$TARGET_RUN_DIR" ]; then
        echo "Config size before pack as filesystem:"
        du -sh $TARGET_RUN_DIR/config
    else
        echo "Not found $TARGET_RUN_DIR/ in workspace, skipping config size check."
    fi
  inithooks.sh: |
    #!/bin/sh
    set -e
    echo "===agent inithooks.sh==="
    echo "init terraform hooks in /cache/data/hooks..."
    mkdir -p /cache/data/hooks
    rm -rf terraform-*
    cd /cache/data/hooks
    cp /scripts/pre-plan.sh terraform-pre-plan
    cp /scripts/post-plan.sh terraform-post-plan
    chmod +x terraform-pre-plan
    chmod +x terraform-post-plan
    ls /cache/data/hooks

  cleanup.sh: |
    #!/bin/sh
    echo "===agent cleanup.sh==="
    cleanup() {
        ALIDIR=${1}
        KEEP_COUNT=${2:-10}
        if [ -d "$ALIDIR" ]; then
            cd "$ALIDIR"
            echo "Handle directory $ALIDIR..."
        else
            echo "Directory $ALIDIR does not exist, skipping."
            return
        fi
        
        if [ $(ls -1 | wc -l) -gt $KEEP_COUNT ]; then
            echo "Found more than $KEEP_COUNT versions. Keeping latest $KEEP_COUNT:"
            ls -t | head -n $KEEP_COUNT
            echo "Deleting old versions:"
            ls -t | tail -n +$((KEEP_COUNT+1)) | xargs rm -rfv
        else
            echo "No cleanup needed (<=$KEEP_COUNT versions)."
        fi
    }
    stop=0
    trap "stop=1" SIGTERM
    while [ $stop -eq 0 ]; do
        echo "$(date -u +'%Y-%m-%dT%H:%M:%SZ') Clean up old alicloud provider versions..."
        cleanup /cache/plugin-cache/registry.terraform.io/aliyun/alicloud/
        cleanup /cache/plugin-cache/registry.terraform.io/hashicorp/alicloud/
        for i in $(seq 1 60); do
            sleep 10
            [ $stop -eq 1 ] && break
        done
    done
